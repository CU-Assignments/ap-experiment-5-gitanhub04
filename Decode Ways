#include <iostream>
#include <vector>

using namespace std;

int numDecodings(string s) {
    if (s.empty() || s[0] == '0') return 0; 

    int n = s.size();
    vector<int> dp(n + 1, 0);
    dp[0] = 1; // Base case: empty string
    dp[1] = s[0] != '0' ? 1 : 0; // First digit check

    for (int i = 2; i <= n; i++) {
        int oneDigit = s[i - 1] - '0';
        int twoDigits = (s[i - 2] - '0') * 10 + (s[i - 1] - '0');

        if (oneDigit >= 1)
            dp[i] += dp[i - 1]; // Single digit decoding

        if (twoDigits >= 10 && twoDigits <= 26)
            dp[i] += dp[i - 2]; // Two-digit decoding
    }

    return dp[n];
}

int main() {
    cout << numDecodings("12") << endl;  // Output: 2
    cout << numDecodings("226") << endl; // Output: 3
    cout << numDecodings("06") << endl;  // Output: 0
    return 0;
}
